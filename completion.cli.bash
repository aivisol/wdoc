# bash completion support for DocToolsLLM
# DO NOT EDIT.
# This script is autogenerated by fire/completion.py.

_complete-DocToolsLLM()
{
  local cur prev opts lastcommand
  COMPREPLY=()
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  cur="${COMP_WORDS[COMP_CWORD]}"
  lastcommand=$(get_lastcommand)

  opts=""
  GLOBAL_OPTIONS=""


  case "${lastcommand}" in
  
    DocToolsLLM)
      
      opts=" ${GLOBAL_OPTIONS}" 
      opts=$(filter_options $opts)
    ;;
  esac

  COMPREPLY=( $(compgen -f -W "${opts}" -- ${cur}) )
  return 0
}

get_lastcommand()
{
  local lastcommand i

  lastcommand=
  for ((i=0; i < ${#COMP_WORDS[@]}; ++i)); do
    if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[
      ${COMP_WORDS[i]} != $cur ]]; then
      lastcommand=${COMP_WORDS[i]}
    fi
  done

  echo $lastcommand
}

filter_options()
{
  local opts
  opts=""
  for opt in "$@"
  do
    if ! option_already_entered $opt; then
      opts="$opts $opt"
    fi
  done

  echo $opts
}

option_already_entered()
{
  local opt
  for opt in ${COMP_WORDS[@]:0:$COMP_CWORD}
  do
    if [ $1 == $opt ]; then
      return 0
    fi
  done
  return 1
}

is_prev_global()
{
  local opt
  for opt in $GLOBAL_OPTIONS
  do
    if [ $opt == $prev ]; then
      return 0
    fi
  done
  return 1
}

complete -F _complete-DocToolsLLM DocToolsLLM

# bash completion support for DocToolsLLM
# DO NOT EDIT.
# This script is autogenerated by fire/completion.py.

_complete-DocToolsLLM()
{
  local cur prev opts lastcommand
  COMPREPLY=()
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  cur="${COMP_WORDS[COMP_CWORD]}"
  lastcommand=$(get_lastcommand)

  opts=""
  GLOBAL_OPTIONS="--private --filetype --save-embeds-as --audio-unsilence --anki-tag-filter --doccheck-max-lines --filter-content --embed-model --youtube-translation --anki-profile --source-tag --audio-backend --dollar-limit --modelname --disable-llm-cache --load-functions --onlinemedia-url-regex --top-k --disable-md-printing --embed-instruct --exclude --anki-notetype --anki-deck --doccheck-min-token --query --import-mode --whisper-prompt --youtube-language --doccheck-min-lang-prob --load-embeds-from --llms-api-bases --task --query-eval-check-number --memoryless --llm-verbosity --file-loader-n-jobs --query-retrievers --DIY-rolling-window-embedding --youtube-audio-backend --doccheck-max-token --include --query-eval-modelname --file-loader-parallel-backend --whisper-lang --summary-n-recursion --embed-kwargs --debug --query-condense-question --deepgram-kwargs --query-relevancy --onlinemedia-resourcetype-regex --loading-failure --out-file --path --summary-language --anki-template --notification-callback --filter-metadata"


  case "${lastcommand}" in
  
    is-absolute)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    exists)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    casefold)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    query-task)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--query --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    to-bytes)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--byteorder --length --self --signed ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    lstat)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    expanduser)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    write-bytes)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--data --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    rename)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --target ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    count)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --value ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    copy)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-symlink)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    replace)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--count --new --old --self --target ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    exclude)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    lchmod)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--mode --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    stat)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--follow-symlinks --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    swapcase)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    extend)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--iterable --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    anki-profile)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    symlink-to)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --target --target-is-directory ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    remove)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --value ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    rglob)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--pattern --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    md-printer)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--color --message ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    lstrip)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--chars --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    partition)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --sep ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    samefile)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--other-path --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    pop)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--index --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    doccheck-min-lang-prob)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--x as-integer-ratio conjugate fromhex hex imag is-integer real ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isdigit)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    filter-metadata)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="copy-with ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-socket)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    relative-to)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    filter-content)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="copy-with ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    anki-notetype)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    expandtabs)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --tabsize ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    rstrip)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--chars --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isprintable)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    get)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--default --key --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    unlink)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--missing-ok --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    rpartition)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --sep ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    youtube-translation)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    doccheck-min-token)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="as-integer-ratio bit-count bit-length conjugate denominator from-bytes imag numerator real to-bytes ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    split)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--maxsplit --self --sep ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    owner)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    doccheck-max-lines)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="as-integer-ratio bit-count bit-length conjugate denominator from-bytes imag numerator real to-bytes ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    include)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    clear)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    sort)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--key --reverse --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    center)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--fillchar --self --width ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isdecimal)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    doccheck-max-token)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="as-integer-ratio bit-count bit-length conjugate denominator from-bytes imag numerator real to-bytes ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    index)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --start --stop --value ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-dir)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-fifo)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    chmod)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--follow-symlinks --mode --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    audio-backend)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    summary-task)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    hex)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isidentifier)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-file)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    bit-count)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    copy-with)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--args --params ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    youtube-audio-backend)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    strip)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--chars --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    title)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    with-stem)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --stem ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    fromkeys)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--iterable --value ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    conjugate)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    onlinemedia-url-regex)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    bit-length)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    mkdir)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--exist-ok --mode --parents --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    setdefault)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--default --key --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    read-bytes)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    group)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    whisper-prompt)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    loading-failure)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    load-functions)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="append clear copy copy-with count extend index insert pop remove reverse sort ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    islower)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    with-name)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--name --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    out-file)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="copy-with ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    rjust)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--fillchar --self --width ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-mount)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    touch)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--exist-ok --mode --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    capitalize)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    resolve)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --strict ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isupper)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-char-device)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    istitle)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-integer)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    youtube-language)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    upper)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    iterdir)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isalnum)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    join)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--iterable --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    zfill)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --width ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    anki-template)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    joinpath)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    prepare-query-task)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    onlinemedia-resourcetype-regex)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    open)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--buffering --encoding --errors --mode --newline --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    encode)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--encoding --errors --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    match)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--path-pattern --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    write-text)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--data --encoding --errors --newline --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    as-integer-ratio)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isspace)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    rsplit)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--maxsplit --self --sep ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    glob)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--pattern --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    embed-instruct)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    link-to)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --target ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    with-suffix)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --suffix ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    popitem)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    anki-deck)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    from-bytes)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--byteorder --bytes --signed ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    translate)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --table ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    absolute)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isalpha)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    read-text)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--encoding --errors --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    hardlink-to)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --target ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    whisper-lang)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    as-uri)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    source-tag)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    anki-tag-filter)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    allowed-extra-args)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="anki-deck anki-notetype anki-profile anki-tag-filter anki-template audio-backend audio-unsilence deepgram-kwargs doccheck-max-lines doccheck-max-token doccheck-min-lang-prob doccheck-min-token embed-instruct exclude file-loader-n-jobs filter-content filter-metadata include load-functions loading-failure onlinemedia-resourcetype-regex onlinemedia-url-regex out-file path source-tag whisper-lang whisper-prompt youtube-audio-backend youtube-language youtube-translation ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isascii)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    path)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="absolute anchor as-posix as-uri chmod cwd drive exists expanduser glob group hardlink-to home is-absolute is-block-device is-char-device is-dir is-fifo is-file is-mount is-relative-to is-reserved is-socket is-symlink iterdir joinpath lchmod link-to lstat match mkdir name open owner parent parents parts read-bytes read-text readlink relative-to rename replace resolve rglob rmdir root samefile stat stem suffix suffixes symlink-to touch unlink with-name with-stem with-suffix write-bytes write-text ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    file-loader-n-jobs)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="as-integer-ratio bit-count bit-length conjugate denominator from-bytes imag numerator real to-bytes ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    VERSION)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="capitalize casefold center count encode endswith expandtabs find format format-map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    as-posix)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-block-device)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    rmdir)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    isnumeric)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    append)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--object --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-relative-to)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    removesuffix)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self --suffix ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    splitlines)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--keepends --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    lower)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    audio-unsilence)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="as-integer-ratio bit-count bit-length conjugate denominator from-bytes imag numerator real to-bytes ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    fromhex)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--string ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    is-reserved)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    insert)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--index --object --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    readlink)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    DocToolsLLM)
      
      opts="VERSION allowed-extra-args md-printer prepare-query-task query-task summary-task ${GLOBAL_OPTIONS}" 
      opts=$(filter_options $opts)
    ;;

    ljust)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--fillchar --self --width ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    removeprefix)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--prefix --self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    deepgram-kwargs)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="clear copy fromkeys get items keys pop popitem setdefault update values ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    reverse)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--self ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;
  esac

  COMPREPLY=( $(compgen -f -W "${opts}" -- ${cur}) )
  return 0
}

get_lastcommand()
{
  local lastcommand i

  lastcommand=
  for ((i=0; i < ${#COMP_WORDS[@]}; ++i)); do
    if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[
      ${COMP_WORDS[i]} != $cur ]]; then
      lastcommand=${COMP_WORDS[i]}
    fi
  done

  echo $lastcommand
}

filter_options()
{
  local opts
  opts=""
  for opt in "$@"
  do
    if ! option_already_entered $opt; then
      opts="$opts $opt"
    fi
  done

  echo $opts
}

option_already_entered()
{
  local opt
  for opt in ${COMP_WORDS[@]:0:$COMP_CWORD}
  do
    if [ $1 == $opt ]; then
      return 0
    fi
  done
  return 1
}

is_prev_global()
{
  local opt
  for opt in $GLOBAL_OPTIONS
  do
    if [ $opt == $prev ]; then
      return 0
    fi
  done
  return 1
}

complete -F _complete-DocToolsLLM DocToolsLLM

